/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WatchlistRouteImport } from './routes/watchlist'
import { Route as SearchRouteImport } from './routes/search'
import { Route as DisclaimerRouteImport } from './routes/disclaimer'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo/tanstack-query'
import { Route as ApiMetaimageRouteImport } from './routes/api.metaimage'
import { Route as ListTypeSlugRouteImport } from './routes/list.$type.$slug'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo/start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo/start.api-request'
import { Route as DemoApiTqTodosRouteImport } from './routes/demo/api.tq-todos'
import { Route as DemoApiNamesRouteImport } from './routes/demo/api.names'
import { Route as CollectionIdChar123SlugChar125RouteImport } from './routes/collection.$id.{-$slug}'
import { Route as TvIdChar123SlugChar125IndexRouteImport } from './routes/tv/$id/{-$slug}/index'
import { Route as MovieIdChar123SlugChar125IndexRouteImport } from './routes/movie/$id/{-$slug}/index'
import { Route as DemoStartSsrIndexRouteImport } from './routes/demo/start.ssr.index'
import { Route as TvIdChar123SlugChar125SeasonsRouteImport } from './routes/tv/$id/{-$slug}/seasons'
import { Route as TvIdChar123SlugChar125MediaRouteImport } from './routes/tv/$id/{-$slug}/media'
import { Route as TvIdChar123SlugChar125CastCrewRouteImport } from './routes/tv/$id/{-$slug}/cast-crew'
import { Route as MovieIdChar123SlugChar125MediaRouteImport } from './routes/movie/$id/{-$slug}/media'
import { Route as MovieIdChar123SlugChar125CastCrewRouteImport } from './routes/movie/$id/{-$slug}/cast-crew'
import { Route as DemoStartSsrSpaModeRouteImport } from './routes/demo/start.ssr.spa-mode'
import { Route as DemoStartSsrFullSsrRouteImport } from './routes/demo/start.ssr.full-ssr'
import { Route as DemoStartSsrDataOnlyRouteImport } from './routes/demo/start.ssr.data-only'

const WatchlistRoute = WatchlistRouteImport.update({
  id: '/watchlist',
  path: '/watchlist',
  getParentRoute: () => rootRouteImport,
} as any)
const SearchRoute = SearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRouteImport,
} as any)
const DisclaimerRoute = DisclaimerRouteImport.update({
  id: '/disclaimer',
  path: '/disclaimer',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiMetaimageRoute = ApiMetaimageRouteImport.update({
  id: '/api/metaimage',
  path: '/api/metaimage',
  getParentRoute: () => rootRouteImport,
} as any)
const ListTypeSlugRoute = ListTypeSlugRouteImport.update({
  id: '/list/$type/$slug',
  path: '/list/$type/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoApiTqTodosRoute = DemoApiTqTodosRouteImport.update({
  id: '/demo/api/tq-todos',
  path: '/demo/api/tq-todos',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoApiNamesRoute = DemoApiNamesRouteImport.update({
  id: '/demo/api/names',
  path: '/demo/api/names',
  getParentRoute: () => rootRouteImport,
} as any)
const CollectionIdChar123SlugChar125Route =
  CollectionIdChar123SlugChar125RouteImport.update({
    id: '/collection/$id/{-$slug}',
    path: '/collection/$id/{-$slug}',
    getParentRoute: () => rootRouteImport,
  } as any)
const TvIdChar123SlugChar125IndexRoute =
  TvIdChar123SlugChar125IndexRouteImport.update({
    id: '/tv/$id/{-$slug}/',
    path: '/tv/$id/{-$slug}/',
    getParentRoute: () => rootRouteImport,
  } as any)
const MovieIdChar123SlugChar125IndexRoute =
  MovieIdChar123SlugChar125IndexRouteImport.update({
    id: '/movie/$id/{-$slug}/',
    path: '/movie/$id/{-$slug}/',
    getParentRoute: () => rootRouteImport,
  } as any)
const DemoStartSsrIndexRoute = DemoStartSsrIndexRouteImport.update({
  id: '/demo/start/ssr/',
  path: '/demo/start/ssr/',
  getParentRoute: () => rootRouteImport,
} as any)
const TvIdChar123SlugChar125SeasonsRoute =
  TvIdChar123SlugChar125SeasonsRouteImport.update({
    id: '/tv/$id/{-$slug}/seasons',
    path: '/tv/$id/{-$slug}/seasons',
    getParentRoute: () => rootRouteImport,
  } as any)
const TvIdChar123SlugChar125MediaRoute =
  TvIdChar123SlugChar125MediaRouteImport.update({
    id: '/tv/$id/{-$slug}/media',
    path: '/tv/$id/{-$slug}/media',
    getParentRoute: () => rootRouteImport,
  } as any)
const TvIdChar123SlugChar125CastCrewRoute =
  TvIdChar123SlugChar125CastCrewRouteImport.update({
    id: '/tv/$id/{-$slug}/cast-crew',
    path: '/tv/$id/{-$slug}/cast-crew',
    getParentRoute: () => rootRouteImport,
  } as any)
const MovieIdChar123SlugChar125MediaRoute =
  MovieIdChar123SlugChar125MediaRouteImport.update({
    id: '/movie/$id/{-$slug}/media',
    path: '/movie/$id/{-$slug}/media',
    getParentRoute: () => rootRouteImport,
  } as any)
const MovieIdChar123SlugChar125CastCrewRoute =
  MovieIdChar123SlugChar125CastCrewRouteImport.update({
    id: '/movie/$id/{-$slug}/cast-crew',
    path: '/movie/$id/{-$slug}/cast-crew',
    getParentRoute: () => rootRouteImport,
  } as any)
const DemoStartSsrSpaModeRoute = DemoStartSsrSpaModeRouteImport.update({
  id: '/demo/start/ssr/spa-mode',
  path: '/demo/start/ssr/spa-mode',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrFullSsrRoute = DemoStartSsrFullSsrRouteImport.update({
  id: '/demo/start/ssr/full-ssr',
  path: '/demo/start/ssr/full-ssr',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartSsrDataOnlyRoute = DemoStartSsrDataOnlyRouteImport.update({
  id: '/demo/start/ssr/data-only',
  path: '/demo/start/ssr/data-only',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/disclaimer': typeof DisclaimerRoute
  '/search': typeof SearchRoute
  '/watchlist': typeof WatchlistRoute
  '/api/metaimage': typeof ApiMetaimageRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/collection/$id/{-$slug}': typeof CollectionIdChar123SlugChar125Route
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/api/tq-todos': typeof DemoApiTqTodosRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/list/$type/$slug': typeof ListTypeSlugRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/movie/$id/{-$slug}/cast-crew': typeof MovieIdChar123SlugChar125CastCrewRoute
  '/movie/$id/{-$slug}/media': typeof MovieIdChar123SlugChar125MediaRoute
  '/tv/$id/{-$slug}/cast-crew': typeof TvIdChar123SlugChar125CastCrewRoute
  '/tv/$id/{-$slug}/media': typeof TvIdChar123SlugChar125MediaRoute
  '/tv/$id/{-$slug}/seasons': typeof TvIdChar123SlugChar125SeasonsRoute
  '/demo/start/ssr': typeof DemoStartSsrIndexRoute
  '/movie/$id/{-$slug}': typeof MovieIdChar123SlugChar125IndexRoute
  '/tv/$id/{-$slug}': typeof TvIdChar123SlugChar125IndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/disclaimer': typeof DisclaimerRoute
  '/search': typeof SearchRoute
  '/watchlist': typeof WatchlistRoute
  '/api/metaimage': typeof ApiMetaimageRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/collection/$id/{-$slug}': typeof CollectionIdChar123SlugChar125Route
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/api/tq-todos': typeof DemoApiTqTodosRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/list/$type/$slug': typeof ListTypeSlugRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/movie/$id/{-$slug}/cast-crew': typeof MovieIdChar123SlugChar125CastCrewRoute
  '/movie/$id/{-$slug}/media': typeof MovieIdChar123SlugChar125MediaRoute
  '/tv/$id/{-$slug}/cast-crew': typeof TvIdChar123SlugChar125CastCrewRoute
  '/tv/$id/{-$slug}/media': typeof TvIdChar123SlugChar125MediaRoute
  '/tv/$id/{-$slug}/seasons': typeof TvIdChar123SlugChar125SeasonsRoute
  '/demo/start/ssr': typeof DemoStartSsrIndexRoute
  '/movie/$id/{-$slug}': typeof MovieIdChar123SlugChar125IndexRoute
  '/tv/$id/{-$slug}': typeof TvIdChar123SlugChar125IndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/disclaimer': typeof DisclaimerRoute
  '/search': typeof SearchRoute
  '/watchlist': typeof WatchlistRoute
  '/api/metaimage': typeof ApiMetaimageRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/collection/$id/{-$slug}': typeof CollectionIdChar123SlugChar125Route
  '/demo/api/names': typeof DemoApiNamesRoute
  '/demo/api/tq-todos': typeof DemoApiTqTodosRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/list/$type/$slug': typeof ListTypeSlugRoute
  '/demo/start/ssr/data-only': typeof DemoStartSsrDataOnlyRoute
  '/demo/start/ssr/full-ssr': typeof DemoStartSsrFullSsrRoute
  '/demo/start/ssr/spa-mode': typeof DemoStartSsrSpaModeRoute
  '/movie/$id/{-$slug}/cast-crew': typeof MovieIdChar123SlugChar125CastCrewRoute
  '/movie/$id/{-$slug}/media': typeof MovieIdChar123SlugChar125MediaRoute
  '/tv/$id/{-$slug}/cast-crew': typeof TvIdChar123SlugChar125CastCrewRoute
  '/tv/$id/{-$slug}/media': typeof TvIdChar123SlugChar125MediaRoute
  '/tv/$id/{-$slug}/seasons': typeof TvIdChar123SlugChar125SeasonsRoute
  '/demo/start/ssr/': typeof DemoStartSsrIndexRoute
  '/movie/$id/{-$slug}/': typeof MovieIdChar123SlugChar125IndexRoute
  '/tv/$id/{-$slug}/': typeof TvIdChar123SlugChar125IndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/disclaimer'
    | '/search'
    | '/watchlist'
    | '/api/metaimage'
    | '/demo/tanstack-query'
    | '/collection/$id/{-$slug}'
    | '/demo/api/names'
    | '/demo/api/tq-todos'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/list/$type/$slug'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/movie/$id/{-$slug}/cast-crew'
    | '/movie/$id/{-$slug}/media'
    | '/tv/$id/{-$slug}/cast-crew'
    | '/tv/$id/{-$slug}/media'
    | '/tv/$id/{-$slug}/seasons'
    | '/demo/start/ssr'
    | '/movie/$id/{-$slug}'
    | '/tv/$id/{-$slug}'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/disclaimer'
    | '/search'
    | '/watchlist'
    | '/api/metaimage'
    | '/demo/tanstack-query'
    | '/collection/$id/{-$slug}'
    | '/demo/api/names'
    | '/demo/api/tq-todos'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/list/$type/$slug'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/movie/$id/{-$slug}/cast-crew'
    | '/movie/$id/{-$slug}/media'
    | '/tv/$id/{-$slug}/cast-crew'
    | '/tv/$id/{-$slug}/media'
    | '/tv/$id/{-$slug}/seasons'
    | '/demo/start/ssr'
    | '/movie/$id/{-$slug}'
    | '/tv/$id/{-$slug}'
  id:
    | '__root__'
    | '/'
    | '/disclaimer'
    | '/search'
    | '/watchlist'
    | '/api/metaimage'
    | '/demo/tanstack-query'
    | '/collection/$id/{-$slug}'
    | '/demo/api/names'
    | '/demo/api/tq-todos'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/list/$type/$slug'
    | '/demo/start/ssr/data-only'
    | '/demo/start/ssr/full-ssr'
    | '/demo/start/ssr/spa-mode'
    | '/movie/$id/{-$slug}/cast-crew'
    | '/movie/$id/{-$slug}/media'
    | '/tv/$id/{-$slug}/cast-crew'
    | '/tv/$id/{-$slug}/media'
    | '/tv/$id/{-$slug}/seasons'
    | '/demo/start/ssr/'
    | '/movie/$id/{-$slug}/'
    | '/tv/$id/{-$slug}/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DisclaimerRoute: typeof DisclaimerRoute
  SearchRoute: typeof SearchRoute
  WatchlistRoute: typeof WatchlistRoute
  ApiMetaimageRoute: typeof ApiMetaimageRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  CollectionIdChar123SlugChar125Route: typeof CollectionIdChar123SlugChar125Route
  DemoApiNamesRoute: typeof DemoApiNamesRoute
  DemoApiTqTodosRoute: typeof DemoApiTqTodosRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
  ListTypeSlugRoute: typeof ListTypeSlugRoute
  DemoStartSsrDataOnlyRoute: typeof DemoStartSsrDataOnlyRoute
  DemoStartSsrFullSsrRoute: typeof DemoStartSsrFullSsrRoute
  DemoStartSsrSpaModeRoute: typeof DemoStartSsrSpaModeRoute
  MovieIdChar123SlugChar125CastCrewRoute: typeof MovieIdChar123SlugChar125CastCrewRoute
  MovieIdChar123SlugChar125MediaRoute: typeof MovieIdChar123SlugChar125MediaRoute
  TvIdChar123SlugChar125CastCrewRoute: typeof TvIdChar123SlugChar125CastCrewRoute
  TvIdChar123SlugChar125MediaRoute: typeof TvIdChar123SlugChar125MediaRoute
  TvIdChar123SlugChar125SeasonsRoute: typeof TvIdChar123SlugChar125SeasonsRoute
  DemoStartSsrIndexRoute: typeof DemoStartSsrIndexRoute
  MovieIdChar123SlugChar125IndexRoute: typeof MovieIdChar123SlugChar125IndexRoute
  TvIdChar123SlugChar125IndexRoute: typeof TvIdChar123SlugChar125IndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/watchlist': {
      id: '/watchlist'
      path: '/watchlist'
      fullPath: '/watchlist'
      preLoaderRoute: typeof WatchlistRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/disclaimer': {
      id: '/disclaimer'
      path: '/disclaimer'
      fullPath: '/disclaimer'
      preLoaderRoute: typeof DisclaimerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/metaimage': {
      id: '/api/metaimage'
      path: '/api/metaimage'
      fullPath: '/api/metaimage'
      preLoaderRoute: typeof ApiMetaimageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/list/$type/$slug': {
      id: '/list/$type/$slug'
      path: '/list/$type/$slug'
      fullPath: '/list/$type/$slug'
      preLoaderRoute: typeof ListTypeSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/api/tq-todos': {
      id: '/demo/api/tq-todos'
      path: '/demo/api/tq-todos'
      fullPath: '/demo/api/tq-todos'
      preLoaderRoute: typeof DemoApiTqTodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/api/names': {
      id: '/demo/api/names'
      path: '/demo/api/names'
      fullPath: '/demo/api/names'
      preLoaderRoute: typeof DemoApiNamesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/collection/$id/{-$slug}': {
      id: '/collection/$id/{-$slug}'
      path: '/collection/$id/{-$slug}'
      fullPath: '/collection/$id/{-$slug}'
      preLoaderRoute: typeof CollectionIdChar123SlugChar125RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tv/$id/{-$slug}/': {
      id: '/tv/$id/{-$slug}/'
      path: '/tv/$id/{-$slug}'
      fullPath: '/tv/$id/{-$slug}'
      preLoaderRoute: typeof TvIdChar123SlugChar125IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/movie/$id/{-$slug}/': {
      id: '/movie/$id/{-$slug}/'
      path: '/movie/$id/{-$slug}'
      fullPath: '/movie/$id/{-$slug}'
      preLoaderRoute: typeof MovieIdChar123SlugChar125IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/': {
      id: '/demo/start/ssr/'
      path: '/demo/start/ssr'
      fullPath: '/demo/start/ssr'
      preLoaderRoute: typeof DemoStartSsrIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tv/$id/{-$slug}/seasons': {
      id: '/tv/$id/{-$slug}/seasons'
      path: '/tv/$id/{-$slug}/seasons'
      fullPath: '/tv/$id/{-$slug}/seasons'
      preLoaderRoute: typeof TvIdChar123SlugChar125SeasonsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tv/$id/{-$slug}/media': {
      id: '/tv/$id/{-$slug}/media'
      path: '/tv/$id/{-$slug}/media'
      fullPath: '/tv/$id/{-$slug}/media'
      preLoaderRoute: typeof TvIdChar123SlugChar125MediaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tv/$id/{-$slug}/cast-crew': {
      id: '/tv/$id/{-$slug}/cast-crew'
      path: '/tv/$id/{-$slug}/cast-crew'
      fullPath: '/tv/$id/{-$slug}/cast-crew'
      preLoaderRoute: typeof TvIdChar123SlugChar125CastCrewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/movie/$id/{-$slug}/media': {
      id: '/movie/$id/{-$slug}/media'
      path: '/movie/$id/{-$slug}/media'
      fullPath: '/movie/$id/{-$slug}/media'
      preLoaderRoute: typeof MovieIdChar123SlugChar125MediaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/movie/$id/{-$slug}/cast-crew': {
      id: '/movie/$id/{-$slug}/cast-crew'
      path: '/movie/$id/{-$slug}/cast-crew'
      fullPath: '/movie/$id/{-$slug}/cast-crew'
      preLoaderRoute: typeof MovieIdChar123SlugChar125CastCrewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/spa-mode': {
      id: '/demo/start/ssr/spa-mode'
      path: '/demo/start/ssr/spa-mode'
      fullPath: '/demo/start/ssr/spa-mode'
      preLoaderRoute: typeof DemoStartSsrSpaModeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/full-ssr': {
      id: '/demo/start/ssr/full-ssr'
      path: '/demo/start/ssr/full-ssr'
      fullPath: '/demo/start/ssr/full-ssr'
      preLoaderRoute: typeof DemoStartSsrFullSsrRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/ssr/data-only': {
      id: '/demo/start/ssr/data-only'
      path: '/demo/start/ssr/data-only'
      fullPath: '/demo/start/ssr/data-only'
      preLoaderRoute: typeof DemoStartSsrDataOnlyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DisclaimerRoute: DisclaimerRoute,
  SearchRoute: SearchRoute,
  WatchlistRoute: WatchlistRoute,
  ApiMetaimageRoute: ApiMetaimageRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  CollectionIdChar123SlugChar125Route: CollectionIdChar123SlugChar125Route,
  DemoApiNamesRoute: DemoApiNamesRoute,
  DemoApiTqTodosRoute: DemoApiTqTodosRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
  ListTypeSlugRoute: ListTypeSlugRoute,
  DemoStartSsrDataOnlyRoute: DemoStartSsrDataOnlyRoute,
  DemoStartSsrFullSsrRoute: DemoStartSsrFullSsrRoute,
  DemoStartSsrSpaModeRoute: DemoStartSsrSpaModeRoute,
  MovieIdChar123SlugChar125CastCrewRoute:
    MovieIdChar123SlugChar125CastCrewRoute,
  MovieIdChar123SlugChar125MediaRoute: MovieIdChar123SlugChar125MediaRoute,
  TvIdChar123SlugChar125CastCrewRoute: TvIdChar123SlugChar125CastCrewRoute,
  TvIdChar123SlugChar125MediaRoute: TvIdChar123SlugChar125MediaRoute,
  TvIdChar123SlugChar125SeasonsRoute: TvIdChar123SlugChar125SeasonsRoute,
  DemoStartSsrIndexRoute: DemoStartSsrIndexRoute,
  MovieIdChar123SlugChar125IndexRoute: MovieIdChar123SlugChar125IndexRoute,
  TvIdChar123SlugChar125IndexRoute: TvIdChar123SlugChar125IndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
