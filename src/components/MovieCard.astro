---
import { Image } from "astro:assets";

interface Props {
  id: number;
  title: string;
  image: string;
  rating: number;
  year: string;
  type: string;
  language: string;
}

const cdn = "https://media.dev.to/cdn-cgi/image/width=400,height=600,fit=cover,gravity=auto,format=auto/"
const { id ,title, image, rating, year, type , language } = Astro.props;
const ratingColor = rating > 7 ? "green" : rating > 5 ? "yellow" : "red";
const imageUrl = (image === 'https://image.tmdb.org/t/p/original/null' || image === 'https://image.tmdb.org/t/p/original/undefined') ? 'https://via.placeholder.com/300x450?text=Image+Not+Found' : image;
---

<a href={`/${type}/${id}`} class="group">
  <div
    class="relative block h-[20rem] overflow-hidden rounded-t-lg ">
    <Image
      src={cdn+imageUrl}
      width={500}
      height={900}
      decoding="async"
    loading="lazy"
      alt="movieImage"
      class="h-full w-full object-cover object-center transition duration-200 group-hover:scale-105 bg-gray-400"
    />

    <span
      class={`absolute left-3 top-3 rounded-lg bg-${ratingColor}-500  px-3 py-1.5 text-sm font-semibold uppercase tracking-wider text-white flex space-x-2 items-center`}
    >
      
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 256 256"><path d="M234.5,114.38l-45.1,39.36,13.51,58.6a16,16,0,0,1-23.84,17.34l-51.11-31-51,31a16,16,0,0,1-23.84-17.34L66.61,153.8,21.5,114.38a16,16,0,0,1,9.11-28.06l59.46-5.15,23.21-55.36a15.95,15.95,0,0,1,29.44,0h0L166,81.17l59.44,5.15a16,16,0,0,1,9.11,28.06Z"></path></svg>
      <span>{Number(rating).toFixed(1)}/10</span>
    </span>
  </div>

  <div class="bg-white rounded-b-lg">
    <div class="p-4">
        <span class="text-lg font-bold text-gray-800 transition duration-100 py-5">{title?.length > 20 ? `${title.substring(0, 20)}...` : title ?? ''}</span>
      <span class="md:hidden text-lg font-bold text-gray-800 transition duration-100 py-5">{title?.length > 24 ? `${title.substring(0, 24)}...` : title ?? ''}</span>
      </span>
      <div class="flex justify-between mt-3">
        <span class="text-sm text-gray-500 lg:text-base">{new Date(year).getFullYear()}</span>
        <div class="text-black">
          <span
            class="text-sm uppercase mx-2 px-2 py-1 bg-blue-200 text-blue-600 rounded-md"
            >{type}</span
          >
          <span
            class="text-sm uppercase mx-2 px-2 py-1 bg-gray-200 text-gray-600 rounded-md"
            >{language}</span
          >
        </div>
      </div>
    </div>
  </div>
</a>
