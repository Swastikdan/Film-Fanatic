---
import Layout from "../layouts/Layout.astro";
import SearchForm from "../components/SearchForm.astro";
import MovieCard from "../components/MovieCard.astro";
const key = import.meta.env.ApiKeyAuth;
const url = import.meta.env.ApiUrl;
export function getStaticPaths() {
  return [
    { params: { slug: "trending" } },
    { params: { slug: "now-playing" } },
    { params: { slug: "upcoming" } },
  ];
}

const { slug } = Astro.params;

const page = Astro.url.searchParams.get("page") || "1";

async function trending(page: string) {
  try {
    const response = await fetch(
      `${url}/trending/all/week?sort_by=popularity.desc&api_key=${key}&page=${page}`
    );
    const data = await response.json();
    return data;
  } catch (error) {
    console.error(error);
  }
}

async function nowplaying(page: string) {
  try {
    const response = await fetch(
      `${url}/movie/now_playing?api_key=${key}&page=${page}`
    );
    const data = await response.json();
    return data;
  } catch (error) {
    console.error(error);
  }
}
async function upcoming(page: string) {
  try {
    const response = await fetch(
      `${url}/movie/upcoming?api_key=${key}&page=${page}`
    );
    const data = await response.json();
    return data;
  } catch (error) {
    console.error(error);
  }
}
interface Movie {
  id: number;
  title: string;
  name: string;
  poster_path: string;
  original_language: string;
  release_date: string;
  first_air_date: string;
  media_type: string;
  vote_average: number;
  total_pages: string;
}

interface MovieData {
  results: Movie[];
  total_pages: number;
}


let moviedata: MovieData | null = null;
try {
  const slugFunctions = {
    trending: trending,
    "now-playing": nowplaying,
    upcoming: upcoming,
  };

  if (slugFunctions[slug]) {
    moviedata = await slugFunctions[slug](page);
  } else {
    throw new Error(`Invalid slug: ${slug}`);
  }
} catch (error) {
  console.error(`There was a problem: ${error.message}`);
}

let maxPage;
if (moviedata) {
  maxPage = Math.min(moviedata.total_pages, 500);
} else {
  console.error("moviedata is undefined");
}

const title:string = slug === "trending"
  ? "Trending Movies & TV Shows"
  : slug === "now-playing"
    ? "Now Playing Movies"
    : "Upcoming Movies";
const description = ` Get the latest ${title} and enjoy the best movies and TV shows.`;
---

<Layout title={title} description={description} ogImage="https://media.dev.to/cdn-cgi/image/width=400,height=200,fit=cover,gravity=auto,format=auto/https://film-fanatic.vercel.app/ogimage.webp" >
  <main >
    <div class="justify-center mx-auto items-center pt-20 pb-10">
      <SearchForm quary="" />
    </div>
    <section>
    {
      Number(page) > maxPage || Number(page) > 500 ? (
        <div class="mx-auto max-w-screen-2xl min-h-[50vh] px-5 md:px-20">
          <div class="flex justify-center items-center">
            <p class="text-center text-red-500 text-2xl md:text-3xl font-medium">
              Page Not Found , It should be less than 
              {maxPage < 500 ? maxPage : 500}
            </p>
          </div>
        </div>
      ) : (
        <>
          <div class="py-10 mx-auto">
            <div class="">
              <h2 class="text-2xl md:text-3xl justify-center text-center font-bold">
                {slug === "trending"
                  ? "Trending Now"
                  : slug === "now-playing"
                    ? "Now Playing"
                    : "Upcoming Movies"}
              </h2>
              <div>
                <div class="py-6 sm:py-8 lg:py-12">
                  {moviedata &&
                  moviedata.results &&
                  moviedata.results.length > 0 ? (
                    <div class="mx-auto max-w-screen-2xl ">
                      <div class="grid  gap-4 sm:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 px-7 md:px-20">
                        {moviedata.results.map((movie: any) => (
                          <MovieCard
                            id={movie.id}
                            title={movie.title || movie.name}
                            image={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}
                            language={movie.original_language}
                            year={movie.release_date || movie.first_air_date}
                            type={movie.media_type || "movie"}
                            rating={movie.vote_average}
                          />
                        ))}
                      </div>
                      <div class="flex justify-center items-center mt-10 ">
                        <div class="flex">
                          {Number(page) == 1 ? (
                            <div class="px-4 py-2 mx-1 transition-colors duration-300 transform rounded-md bg-gray-800 ext-gray-200  opacity-30 select-none">
                              <div class="flex items-center -mx-1">
                                <svg
                                  xmlns="http://www.w3.org/2000/svg"
                                  class="w-6 h-6 mx-1 rtl:-scale-x-100"
                                  fill="none"
                                  viewBox="0 0 24 24"
                                  stroke="currentColor"
                                >
                                  <path
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    stroke-width="2"
                                    d="M7 16l-4-4m0 0l4-4m-4 4h18"
                                  />
                                </svg>

                                
                              </div>
                            </div>
                          ) : (
                            <a
                              href={`/${slug}?page=${Math.max(
                                1,
                                Number(page) - 1
                              )}`}
                              aria-label="Previous page"
                              class="px-4 py-2 mx-1 transition-colors duration-300 transform rounded-md bg-gray-800 ext-gray-200 hover:bg-blue-500 hover:text-gray-200 focus:ring-2 focus:outline-none ring-white"
                            >
                              <div class="flex items-center -mx-1">
                                <svg
                                  xmlns="http://www.w3.org/2000/svg"
                                  class="w-6 h-6 mx-1 rtl:-scale-x-100"
                                  fill="none"
                                  viewBox="0 0 24 24"
                                  stroke="currentColor"
                                >
                                  <path
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    stroke-width="2"
                                    d="M7 16l-4-4m0 0l4-4m-4 4h18"
                                  />
                                </svg>

                                
                              </div>
                            </a>
                          )}

                          {Number(page) > 4 ? (
                            <a
                              href={`/${slug}?page=1`}
                              class="hidden px-4 py-2 mx-1 transition-colors duration-300 transform rounded-md sm:inline bg-gray-800 text-gray-200 hover:bg-blue-500 hover:text-gray-200 focus:ring-2 focus:outline-none ring-white"
                            >
                              1
                            </a>
                            <div
                              class="hidden px-2 py-2 mx-1 transition-colors duration-300 transform rounded-md sm:inline font-semibold text-gray-200 "
                            >
                              ...
                            </div>
                          ) : null}

                          {Array.from({ length: maxPage }, (_, i) => i + 1).map(
                            (pageNum) =>
                              pageNum >= Number(page) - 2 && pageNum <= Number(page) + 2 ? (
                                <a
                                  href={`/${slug}?page=${pageNum}`}
                                  class={`hidden px-4 py-2 mx-1 transition-colors duration-300 transform rounded-md sm:inline bg-gray-800 text-gray-200 hover:bg-blue-500 hover:text-gray-200 focus:ring-2 focus:outline-none ring-white ${
                                    pageNum == Number(page) ? "current" : ""
                                  }`}
                                >
                                  {pageNum}
                                </a>
                              ) : null
                          )}

                          {Number(page) < maxPage - 4 ? (
                            <div
                              class="hidden px-2 py-2 mx-1 transition-colors duration-300 transform rounded-md sm:inline font-semibold text-gray-200 "
                            >
                              ...
                            </div>
                            <a
                              href={`/${slug}?page=${maxPage}`}
                              class="hidden px-4 py-2 mx-1 transition-colors duration-300 transform rounded-md sm:inline bg-gray-800 text-gray-200 hover:bg-blue-500 hover:text-gray-200 focus:ring-2 focus:outline-none ring-white"
                            >
                              {maxPage}
                            </a>
                          ) : null}
                          {page == maxPage ? (
                            <div class="px-4 py-2 mx-1 transition-colors duration-300 transform rounded-md bg-gray-800 ext-gray-200 disabled cursor-not-allowed opacity-30">
                              <div class="flex items-center -mx-1">
                                

                                <svg
                                  xmlns="http://www.w3.org/2000/svg"
                                  class="w-6 h-6 mx-1 rtl:-scale-x-100"
                                  fill="none"
                                  viewBox="0 0 24 24"
                                  stroke="currentColor"
                                >
                                  <path
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    stroke-width="2"
                                    d="M17 8l4 4m0 0l-4 4m4-4H3"
                                  />
                                </svg>
                              </div>
                            </div>
                          ) : (
                            <a
                              href={`/${slug}?page=${Math.min(
                                maxPage,
                                Number(page) + 1
                              )}`}
                              aria-label="Next page"
                              class="px-4 py-2 mx-1 transition-colors duration-300 transform rounded-md bg-gray-800 ext-gray-200 hover:bg-blue-500 hover:text-gray-200 focus:ring-2 focus:outline-none ring-white"
                            >
                              <div class="flex items-center -mx-1">
                                

                                <svg
                                  xmlns="http://www.w3.org/2000/svg"
                                  class="w-6 h-6 mx-1 rtl:-scale-x-100"
                                  fill="none"
                                  viewBox="0 0 24 24"
                                  stroke="currentColor"
                                >
                                  <path
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    stroke-width="2"
                                    d="M17 8l4 4m0 0l-4 4m4-4H3"
                                  />
                                </svg>
                              </div>
                            </a>
                          )}
                        </div>
                      </div>
                    </div>
                  ) : (
                    <div class="mx-auto max-w-screen-2xl min-h-[50vh] px-5 md:px-20">
                      <div class="flex justify-center items-center">
                        <p class="text-center text-red-500 text-2xl md:text-3xl font-medium">
                          Something went wrong. Please try again later.
                        </p>
                      </div>
                    </div>
                  )}
                </div>
              </div>
            </div>
          </div>
        </>
      )
    }
    </section>
  </main>
</Layout>

<!-- {Number(page) > maxPage || Number(page) > 500 ? (
        <div>Page not found</div>
    ) : (
        <>
            
            {
                Number(page) > 1 ? (
                    <a href={`/${slug}?page=${Number(page) - 1}`}>Before</a>
                ) : (
                    <span>Before</span>
                )
            }

            {
                Number(page) < maxPage ? (
                    <a href={`/${slug}?page=${Number(page) + 1}`}>Next</a>
                ) : (
                    <span>Next</span>
                )
            }
            <div>{JSON.stringify(data)}</div>
        </>
    )} -->
<!-- <MovieCard id={data.id}
title={data.title || data.name}
image={`https://image.tmdb.org/t/p/original/${data.poster_path}`}
language={data.original_language}
year={data.release_date || data.first_air_date}
type={data.media_type}
rating={data.vote_average} /> -->
