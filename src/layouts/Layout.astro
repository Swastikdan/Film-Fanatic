---
import { ViewTransitions } from "astro:transitions";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";

interface Props {
	title: string;
  description: string;
  ogImage: string;

}

const { title ="Film Fanatic" , description ="Explore a vast collection of movies and TV shows with Film Fanatic." , ogImage="https://media.dev.to/cdn-cgi/image/width=800,height=400,fit=cover,gravity=auto,format=auto/https://film-fanatic.vercel.app/ogimage.webp"  } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="canonical" href={Astro.url}> 
    <meta name="msapplication-TileColor" content="#da532c" />
    <meta name="theme-color" content="#030712" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:site_name" content={title} />
    <meta property="og:locale" content="en_US" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta
      property="og:description"
      content={description}
    />
    <meta
      property="og:image"
      content={ogImage}
    />
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:domain" content="https://film-fanatic.vercel.app/" />
    <meta property="twitter:url" content={Astro.url} />
    <meta name="twitter:title" content={title} />
    <meta
      name="twitter:description"
      content={description}
    />
    <meta
      name="twitter:image"
      content={ogImage}
    />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body class="font-sora text-white bg-gray-950">
    <header class="sticky top-0 z-30 bg-gray-950">
    <Navbar /></header>
<div id="preloader" class= " z-20 fixed flex justify-center w-full opacity-0">
    <div class="w-full">
       <div id="progress-bar " class="h-1.5 bg-blue-600 " role="status" aria-label="loading" style=" ">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
</div>
<slot />
<Footer/>
<script is:inline>
    function initLoader() {
        document.addEventListener('astro:before-preparation', () => {
            let progressBar = document.querySelector('#progress-bar');
            document.querySelector("#preloader").classList.add("z-50", "opacity-100");

            progressBar.style.width = '0';
            progressBar.style.animation = 'progress1 1s ease-out forwards, progress2 2s ease-out 1s forwards';
        });

        document.addEventListener('astro:after-preparation', () => {
            let progressBar = document.querySelector('#progress-bar');
            document.querySelector("#preloader").classList.remove("z-50", "opacity-100");
            progressBar.style.animation = 'progress3 1.5s ease-out forwards'; // Adjust the animation
        });
    }

    document.addEventListener('DOMContentLoaded', initLoader);
</script>

    <style is:global>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      code {
        font-family:
          Menlo,
          Monaco,
          Lucida Console,
          Liberation Mono,
          DejaVu Sans Mono,
          Bitstream Vera Sans Mono,
          Courier New,
          monospace;
      }
      /* sora-latin-wght-normal */
      @font-face {
        font-family: "Sora Variable";
        font-style: normal;
        font-display: swap;
        font-weight: 100 800;
        src: url(https://cdn.jsdelivr.net/fontsource/fonts/sora:vf@latest/latin-wght-normal.woff2)
          format("woff2-variations");
        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6,
          U+02DA, U+02DC, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329,
          U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215,
          U+FEFF, U+FFFD;
      }
      .font-sora {
        font-family: "Sora Variable", sans-serif;
        font-display: swap;
      }

      .bg-green-500 {
        --tw-bg-opacity: 1;
        background-color: rgb(34 197 94 / var(--tw-bg-opacity));
      }
      .bg-red-500 {
        --tw-bg-opacity: 1;
        background-color: rgb(239 68 68 / var(--tw-bg-opacity));
      }
      .bg-yellow-500 {
        --tw-bg-opacity: 1;
        background-color: rgb(234 179 8 / var(--tw-bg-opacity));
      }
 @keyframes progress1 {
        0% {
            width: 0;
        }

        100% {
            width: 40%;
        }
    }

    @keyframes progress2 {
        0% {
            width: 40%;
        }

        100% {
            width: 80%;
        }
    }

    @keyframes progress3 {
        0% {
            width: 80%;
        }

        100% {
            width: 80%;
        }
    }
    </style>
  </body>
</html>
  <!-- // let progressBar = document.querySelector("#progress-bar");

  // function startLoading() {
  //   document.querySelector("#preloader").classList.add("z-20", "opacity-100");
  //   let width = 0;
  //   let intervalId = setInterval(() => {
  //     if (width >= 100) {
  //       clearInterval(intervalId);
  //     } else {
  //       width++;
  //       progressBar.style.width = width + '%';
  //     }
  //   }, 10); // Adjust this value to control the speed of the progress bar
  // }

  // function stopLoading() {
  //   progressBar.style.width = '100%';
  //   setTimeout(() => {
  //     document.querySelector("#preloader").classList.remove("z-20", "opacity-100");
  //   }, 1000); // Wait for 1s before hiding the preloader
  // }

  // document.addEventListener("astro:before-preparation", startLoading);
  // document.addEventListener("astro:after-preparation", stopLoading);

  // window.onpopstate = function(event) {
  //   startLoading();
  //   setTimeout(stopLoading, 1000); // Wait for 1s before stopping the preloader
  // }; -->